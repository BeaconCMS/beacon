name: Elixir CI

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

env:
  MIX_ENV: test

permissions:
  contents: read

jobs:
  test:
    name: mix test (OTP ${{matrix.otp}} | Elixir ${{matrix.elixir}})

    strategy:
      matrix:
        include:
          - elixir: '1.14.0'
            otp: '23'

          - elixir: '1.14.2'
            otp: '25.1.2'
            lint: true

    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13.1
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Elixir
        uses: erlef/setup-beam@v1
        with:
          elixir-version: ${{ matrix.elixir }}
          otp-version: ${{ matrix.otp }}

      - name: Restore cache
        uses: actions/cache@v3
        id: mix-cache
        with:
          path: |
            deps
            _build
          key: mix-${{ runner.os }}-${{ matrix.otp }}-${{ matrix.elixir }}-${{ hashFiles('**/mix.lock') }}
          restore-keys: |
            mix-${{ runner.os }}-${{ matrix.otp }}-${{ matrix.elixir }}-

      - name: Install mix deps
        if: steps.mix-cache.outputs.cache-hit != 'true'
        run: |
          mix deps.get
          mix deps.compile

      - run: mix compile --warnings-as-errors
        if: ${{ matrix.lint }}

      - run: mix format --check-formatted
        if: ${{ matrix.lint }}

      - run: mix deps.unlock --check-unused
        if: ${{ matrix.lint }}

      - run: mix test
